function matrix2TikZ(matrix, filename, width, height, list, x_mesh, y_mesh, usetemplate)
%MATRIX2TIKZ    Convert matrix to TikZ/Pgfplots figure.
%
%   MATRIX2TIKZ(MATRIX, FILENAME,...)
%   convert the 2d MATRIX to LaTeX figure saved in FILENAME.
%   MATRIX is a [n x m] or [m x 3] matrix.
%
%   MATRIX2TIKZ(MATRIX, FILENAME, WIDTH) explicitely specifies the width of the
%   figure. (default: 8cm)
%
%   MATRIX2TIKZ(MATRIX, FILENAME, WIDTH, list) if list == 'list' the MATRIX is
%   already a [m x 3] matrix and is directly written to file.

%Input checks
if ndims(matrix) ~= 2
	error('I can only convert a 2D matrix.');
end

if nargin < 2
	error('You must provide at least two arguments: a MATRIX and a FILENAME.');
elseif nargin < 3
	width = '8cm';
	list = '';	
end

%Generate output matrix [x y data]
if strcmp(list, 'list')
	out = matrix;
elseif strcmp(list, 'matrix')
    out = matrix(:);
    x_vec = x_mesh(:);
    y_vec = y_mesh(:);
    rows = size(matrix, 1);
    cols = size(matrix, 2);
else
	out = zeros(size(matrix,1)*size(matrix,2),3);
	for x=1:size(matrix, 2)
		for y=1:size(matrix, 1)
			%Y axis is inverted
			out((y-1)*size(matrix, 2)+x,:) = [x size(matrix,1)+1-y matrix(y,x)];
		end
	end
end

% check if template should be used
% if no, results in very simple tex file
if strcmp(usetemplate, 'no')

    %Write to file
    fileID = fopen(filename,'w');
    fprintf(fileID,[ ...
        '\\pgfplotsset{\n' ...
        '    matrix rows/.store in=\\matrixrows,\n' ...
    ]);

    fprintf(fileID, [ ...
        '    matrix rows=%i,\n' ...
    ], rows);

    fprintf(fileID, [ ...
        '    matrix cols/.store in=\\matrixcols,\n' ...
    ]);

    fprintf(fileID, [ ...
        '    matrix cols=%i,\n' ...
    ], cols);

    fprintf(fileID, [ ...
        '}\n' ...
        '\\begin{tikzpicture}\n' ...
        '    \\begin{axis}[\n' ...
    ]);

    fprintf(fileID, [ ...
        '        width=%s,\n' ...
        '        height=%s,\n' ...
    ], width, height);

    fprintf(fileID, [ ...
        '        matrix plot,\n' ...
        '        colormap/hot,\n' ...
        '        colorbar\n' ...
        '    ]\n' ...
    ]);

    fprintf(fileID, [ ...
        '        \\addplot table [meta=z]{\n' ...
        '            x y z\n' ...
    ]);

    fprintf(fileID, [ ...
        '            %f %f %f\n' ...
    ], [x_vec, y_vec, out]');
     
    fprintf(fileID, [ ...
        '        };\n' ...
        '    \\end{axis}\n' ...
        '\\end{tikzpicture}' ...
    ]);

else
    % check if file exists
    if exist('template.tex', 'file')
%         copyfile('template.tex', filename);
        fileID = fopen('template.tex','rt') ;
        temp = fread(fileID);
        fclose(fileID);
        temp = char(temp.');
        % replace string S1 with string S2
        temp = strrep(temp, '#1', sprintf('%d', rows));
        temp = strrep(temp, '#2', sprintf('%d', cols));
        temp = strrep(temp, '#3', sprintf('%f', x_vec(1)));
        temp = strrep(temp, '#4', sprintf('%f', x_vec(end)));
        temp = strrep(temp, '#5', sprintf('%f', y_vec(1)));
        temp = strrep(temp, '#6', sprintf('%f', y_vec(end)));
        
        temp = strrep(temp, '#7', sprintf('%s', filename));
        
        fileID2 = fopen(filename,'wt');
        fwrite(fileID2, temp);
        fclose(fileID2);
    end
    fileID = fopen(filename, 'a');

%     fprintf(fileID, [ ...
%         '    \\pgfplotsset{\n' ...
%         '            matrix rows/.store in=\\matrixrows,\n' ...
%         '            matrix rows=%i,\n' ...
%         '            matrix cols/.store in=\\matrixcols,\n' ...
%         '            matrix cols=%i,\n' ...
%         '            xmin/.store in=\\xmin,\n' ...
%         '            xmin=%f,\n' ...
%         '            xmax/.store in=\\xmax,\n' ...
%         '            xmax=%f,\n' ...
%         '            ymin/.store in=\\ymin,\n' ...
%         '            ymin=%f,\n' ...
%         '            ymax/.store in=\\ymax,\n' ...
%         '            ymax=%f,\n' ...
%         '    }\n' ...
%     ], rows, cols, x_vec(1), x_vec(end), y_vec(1), y_vec(end));

    % read table from file
    
%     fprintf(fileID, [ ...
%         '    \\addplot [matrix plot*, point meta=explicit, mesh/cols=\\matrixcols, mesh/rows=\\matrixrows] table [meta=z]{\n' ...
%         '        x y z\n' ...
%     ]);
% 
%     fprintf(fileID, [ ...
%         '        %f %f %f\n' ...
%     ], [x_vec, y_vec, out]');

    fprintf(fileID, [ ...
        '\\addplot [matrix plot*, point meta=explicit, mesh/cols=\\matrixcols, mesh/rows=\\matrixrows] table [meta=z]{\\datatable};\n'
    ]);

    
    fprintf(fileID, [ ...
        '    \\end{axis}\n' ...
        '\\end{tikzpicture}' ...
    ]);

end

fclose(fileID);

fileID3 = fopen(strcat(filename, '.txt'), 'w');
fprintf(fileID3, [ ...
    'x y z\n' ...
]);

fprintf(fileID3, [ ...
    '%f %f %f\n' ...
], [x_vec, y_vec, out]');

fclose(fileID3);
